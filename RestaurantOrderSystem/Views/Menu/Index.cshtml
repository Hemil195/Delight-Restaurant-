@model RestaurantOrderSystem.Models.ViewModels.MenuViewModel

@{
    ViewBag.Title = "Our Menu";
    var selectedCategory = Model.Categories?.FirstOrDefault(c => c.CategoryID == Model.SelectedCategoryId);
}

<div class="container mt-4">
    <!-- Header -->
    <div class="text-center mb-5">
        <h1 class="display-4">Our Menu</h1>
        @if (selectedCategory != null)
        {
            <p class="lead">
                Showing items from: <strong>@selectedCategory.Name</strong>
            </p>
        }
        else if (!string.IsNullOrEmpty(Model.SearchTerm))
        {
            <p class="lead">
                Search results for: <strong>"@Model.SearchTerm"</strong>
            </p>
        }
        else
        {
            <p class="lead">Discover our delicious selection of carefully crafted dishes</p>
        }
    </div>

    <!-- Search and Filter Bar -->
    <div class="row mb-4">
        <div class="col-lg-6">
            @using (Html.BeginForm("Index", "Menu", FormMethod.Get, new { @class = "d-flex" }))
            {
                <div class="input-group">
                    @Html.TextBox("search", Model.SearchTerm, new { @class = "form-control", @placeholder = "Search menu items..." })
                    <button class="btn btn-outline-primary" type="submit">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
            }
        </div>
        <div class="col-lg-6">
            <div class="d-flex justify-content-end">
                @Html.ActionLink("View All Items", "Index", "Menu", null, new { @class = "btn btn-outline-secondary" })
            </div>
        </div>
    </div>

    <!-- Categories Filter -->
    @if (Model.Categories != null && Model.Categories.Any())
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Browse by Category</h5>
                        <div class="d-flex flex-wrap gap-2">
                            @Html.ActionLink("All Items", "Index", "Menu", null, 
                                new { @class = Model.SelectedCategoryId == null ? "btn btn-primary" : "btn btn-outline-primary" })
                            
                            @foreach (var category in Model.Categories)
                            {
                                @Html.ActionLink(category.Name, "Index", "Menu", new { categoryId = category.CategoryID }, 
                                    new { @class = Model.SelectedCategoryId == category.CategoryID ? "btn btn-primary" : "btn btn-outline-primary" })
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Menu Items -->
    @if (Model.MenuItems != null && Model.MenuItems.Any())
    {
        <div class="row">
            @foreach (var item in Model.MenuItems)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 shadow-sm">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;"
                                 onerror="this.src='/images/menu/default-food.jpg'">
                        }
                        else
                        {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="fas fa-utensils fa-2x text-muted"></i>
                            </div>
                        }
                        
                        <div class="card-body d-flex flex-column">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title">@item.Name</h5>
                                @if (item.IsFeatured)
                                {
                                    <span class="badge bg-warning text-dark">Featured</span>
                                }
                            </div>
                            
                            @if (!string.IsNullOrEmpty(item.Description))
                            {
                                <p class="card-text text-muted flex-grow-1">@item.Description</p>
                            }
                            
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="h5 text-primary mb-0">@item.Price.ToString("C")</span>
                                    @if (item.Category != null)
                                    {
                                        <small class="text-muted">@item.Category.Name</small>
                                    }
                                </div>
                                
                                <div class="mt-3 d-flex gap-2">
                                    @Html.ActionLink("View Details", "Details", "Menu", new { id = item.ItemID }, 
                                        new { @class = "btn btn-outline-primary flex-fill" })
                                    
                                    @using (Html.BeginForm("AddToCart", "Menu", FormMethod.Post, new { @class = "flex-fill" }))
                                    {
                                        @Html.Hidden("itemId", item.ItemID)
                                        @Html.Hidden("quantity", 1)
                                        <button type="submit" class="btn btn-primary w-100">
                                            <i class="fas fa-cart-plus"></i> Add to Cart
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-search fa-3x text-muted mb-3"></i>
            <h4>No Menu Items Found</h4>
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <p class="text-muted">
                    We couldn't find any items matching "<strong>@Model.SearchTerm</strong>". 
                    Try a different search term or browse our categories.
                </p>
                @Html.ActionLink("View All Items", "Index", "Menu", null, new { @class = "btn btn-primary" })
            }
            else if (selectedCategory != null)
            {
                <p class="text-muted">
                    No items available in the <strong>@selectedCategory.Name</strong> category at the moment.
                </p>
                @Html.ActionLink("View All Items", "Index", "Menu", null, new { @class = "btn btn-primary" })
            }
            else
            {
                <p class="text-muted">Our menu is being updated. Please check back soon!</p>
            }
        </div>
    }
</div>

@section Scripts {
    <style>
        .card {
            transition: transform 0.2s ease-in-out;
            position: relative;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .list-group-item {
            border-left: none;
            border-right: none;
        }
        .list-group-item:first-child {
            border-top: none;
        }
        .list-group-item:last-child {
            border-bottom: none;
        }
    </style>
}