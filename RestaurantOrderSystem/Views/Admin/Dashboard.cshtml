@model RestaurantOrderSystem.Models.ViewModels.AdminDashboardViewModel

@{
    ViewBag.Title = "Admin Dashboard";
    ViewBag.IsAdminLoggedIn = true;
    ViewBag.AdminUsername = Session["AdminUsername"];
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-tachometer-alt"></i> Admin Dashboard</h2>
        <div class="text-end">
            <small class="text-muted d-block">Welcome back, @ViewBag.AdminUsername</small>
            @Html.ActionLink("Logout", "Logout", "Login", null, new { @class = "btn btn-sm btn-outline-danger mt-1" })
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="h5">@Model.TotalMenuItems</div>
                            <div>Menu Items</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-utensils fa-2x"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @Html.ActionLink("Manage Menu Items", "MenuItems", "Admin", null, new { @class = "text-white text-decoration-none" })
                    <i class="fas fa-arrow-right ms-1"></i>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="h5">@Model.TotalCategories</div>
                            <div>Categories</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-list fa-2x"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @Html.ActionLink("Manage Categories", "Categories", "Admin", null, new { @class = "text-white text-decoration-none" })
                    <i class="fas fa-arrow-right ms-1"></i>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card bg-warning text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="h5">@Model.PendingOrders</div>
                            <div>Pending Orders</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clock fa-2x"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @Html.ActionLink("View Orders", "Orders", "Admin", null, new { @class = "text-white text-decoration-none" })
                    <i class="fas fa-arrow-right ms-1"></i>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="h5">@Model.TodaysRevenue.ToString("C")</div>
                            <div>Today's Revenue</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-dollar-sign fa-2x"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <span class="text-white">Total orders: @Model.TotalOrders</span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Recent Orders -->
        <div class="col-lg-8 mb-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5><i class="fas fa-shopping-bag"></i> Recent Orders</h5>
                    @Html.ActionLink("View All", "Orders", "Admin", null, new { @class = "btn btn-sm btn-primary" })
                </div>
                <div class="card-body">
                    @if (Model.RecentOrders != null && Model.RecentOrders.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Order #</th>
                                        <th>Customer</th>
                                        <th>Total</th>
                                        <th>Status</th>
                                        <th>Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var order in Model.RecentOrders.Take(5))
                                    {
                                        <tr>
                                            <td><strong>#@order.OrderID</strong></td>
                                            <td>@order.CustomerName</td>
                                            <td>@order.TotalAmount.ToString("C")</td>
                                            <td>
                                                <span class="badge bg-@(GetStatusColor(order.Status))">
                                                    @order.Status.ToString()
                                                </span>
                                            </td>
                                            <td>@order.OrderDate.ToString("MM/dd HH:mm")</td>
                                            <td>
                                                @Html.ActionLink("Details", "OrderDetails", "Admin", new { id = order.OrderID }, new { @class = "btn btn-sm btn-outline-primary" })
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-shopping-bag fa-2x text-muted mb-2"></i>
                            <p class="text-muted">No recent orders</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="col-lg-4 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-bolt"></i> Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @Html.ActionLink("Add Menu Item", "CreateMenuItem", "Admin", null, new { @class = "btn btn-outline-primary" })
                        @Html.ActionLink("Add Category", "CreateCategory", "Admin", null, new { @class = "btn btn-outline-success" })
                        @Html.ActionLink("View Pending Orders", "Orders", "Admin", null, new { @class = "btn btn-outline-warning" })
                        @Html.ActionLink("Customer Menu", "Index", "Menu", null, new { @class = "btn btn-outline-info" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusColor(RestaurantOrderSystem.Models.OrderStatus status)
    {
        switch (status)
        {
            case RestaurantOrderSystem.Models.OrderStatus.Pending: return "warning";
            case RestaurantOrderSystem.Models.OrderStatus.Confirmed: return "info";
            case RestaurantOrderSystem.Models.OrderStatus.Preparing: return "primary";
            case RestaurantOrderSystem.Models.OrderStatus.Ready: return "success";
            case RestaurantOrderSystem.Models.OrderStatus.Completed: return "secondary";
            case RestaurantOrderSystem.Models.OrderStatus.Cancelled: return "danger";
            default: return "secondary";
        }
    }
}