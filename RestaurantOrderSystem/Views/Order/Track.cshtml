@model RestaurantOrderSystem.Models.ViewModels.OrderHistoryViewModel

@{
    ViewBag.Title = "Track Your Order";
}

<div class="container mt-4">
    <h2><i class="fas fa-search"></i> Track Your Order</h2>

    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5>Enter Your Email</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Track", "Order", FormMethod.Post))
                    {
                        <div class="mb-3">
                            @Html.Label("CustomerEmail", "Email Address", new { @class = "form-label" })
                            @Html.TextBox("CustomerEmail", Model?.CustomerEmail, new { @class = "form-control", @type = "email", @placeholder = "Enter your email address", required = "required" })
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i> Track Orders
                        </button>
                    }
                </div>
            </div>
        </div>
        
        <div class="col-lg-6">
            <div class="card bg-light">
                <div class="card-body">
                    <h6><i class="fas fa-info-circle"></i> How to Track Your Order</h6>
                    <ul class="list-unstyled mb-0">
                        <li><i class="fas fa-check text-success"></i> Enter the email address used when placing your order</li>
                        <li><i class="fas fa-check text-success"></i> View all orders associated with your email</li>
                        <li><i class="fas fa-check text-success"></i> Check real-time status updates</li>
                        <li><i class="fas fa-check text-success"></i> Estimated pickup/delivery times</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    @if (Model != null && Model.Orders != null && Model.Orders.Any())
    {
        <div class="mt-5">
            <h4>Your Orders</h4>
            <p class="text-muted">Orders for: <strong>@Model.CustomerEmail</strong></p>
            
            @foreach (var order in Model.Orders.OrderByDescending(o => o.OrderDate))
            {
                <div class="card mb-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="mb-0">Order #@order.OrderID</h6>
                            <small class="text-muted">Placed on @order.OrderDate.ToString("MMM dd, yyyy 'at' HH:mm")</small>
                        </div>
                        <div>
                            <span class="badge bg-@(GetStatusColor(order.Status)) fs-6">
                                @order.Status.ToString()
                            </span>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <h6>Order Details</h6>
                                @if (order.OrderDetails != null && order.OrderDetails.Any())
                                {
                                    <ul class="list-unstyled mb-0">
                                        @foreach (var detail in order.OrderDetails)
                                        {
                                            <li class="d-flex justify-content-between">
                                                <span>@detail.Quantity x @detail.MenuItem.Name</span>
                                                <span>@detail.Subtotal.ToString("C")</span>
                                            </li>
                                        }
                                    </ul>
                                }
                                
                                @if (!string.IsNullOrEmpty(order.SpecialInstructions))
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">
                                            <strong>Special Instructions:</strong> @order.SpecialInstructions
                                        </small>
                                    </div>
                                }
                            </div>
                            <div class="col-md-4 text-end">
                                <h6>Total: @order.TotalAmount.ToString("C")</h6>
                                
                                <div class="mt-3">
                                    @switch (order.Status)
                                    {
                                        case RestaurantOrderSystem.Models.OrderStatus.Pending:
                                            <small class="text-warning">
                                                <i class="fas fa-clock"></i> Order received, waiting for confirmation
                                            </small>
                                            break;
                                        case RestaurantOrderSystem.Models.OrderStatus.Confirmed:
                                            <small class="text-info">
                                                <i class="fas fa-check"></i> Order confirmed, preparation will begin soon
                                            </small>
                                            break;
                                        case RestaurantOrderSystem.Models.OrderStatus.Preparing:
                                            <small class="text-primary">
                                                <i class="fas fa-fire"></i> Your delicious meal is being prepared
                                            </small>
                                            break;
                                        case RestaurantOrderSystem.Models.OrderStatus.Ready:
                                            <small class="text-success">
                                                <i class="fas fa-bell"></i> Order ready for pickup/delivery!
                                            </small>
                                            break;
                                        case RestaurantOrderSystem.Models.OrderStatus.Completed:
                                            <small class="text-secondary">
                                                <i class="fas fa-check-circle"></i> Order completed
                                            </small>
                                            break;
                                        case RestaurantOrderSystem.Models.OrderStatus.Cancelled:
                                            <small class="text-danger">
                                                <i class="fas fa-times"></i> Order cancelled
                                            </small>
                                            break;
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else if (Model != null && !string.IsNullOrEmpty(Model.CustomerEmail) && (Model.Orders == null || !Model.Orders.Any()))
    {
        <div class="alert alert-info mt-4">
            <i class="fas fa-info-circle"></i>
            <strong>No orders found</strong> for email address: <strong>@Model.CustomerEmail</strong>
            <br>
            <small>Please check your email address or contact us if you need assistance.</small>
        </div>
    }

    <div class="mt-5">
        <div class="card bg-light">
            <div class="card-body text-center">
                <h6>Need Help?</h6>
                <p class="mb-2">Can't find your order or have questions?</p>
                <p class="mb-0">
                    <i class="fas fa-phone"></i> Call us: (555) 123-4567 | 
                    <i class="fas fa-envelope"></i> Email: orders@restaurant.com
                </p>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusColor(RestaurantOrderSystem.Models.OrderStatus status)
    {
        switch (status)
        {
            case RestaurantOrderSystem.Models.OrderStatus.Pending: return "warning";
            case RestaurantOrderSystem.Models.OrderStatus.Confirmed: return "info";
            case RestaurantOrderSystem.Models.OrderStatus.Preparing: return "primary";
            case RestaurantOrderSystem.Models.OrderStatus.Ready: return "success";
            case RestaurantOrderSystem.Models.OrderStatus.Completed: return "secondary";
            case RestaurantOrderSystem.Models.OrderStatus.Cancelled: return "danger";
            default: return "secondary";
        }
    }
}